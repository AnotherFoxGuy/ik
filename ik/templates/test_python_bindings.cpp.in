#include "gmock/gmock.h"
#include "Python.h"
#include "ik/ik.h"

#define NAME python_bindings

PyMODINIT_FUNC PyInit_ik(void);

using namespace ::testing;

static void init_python()
{
    PyImport_AppendInittab("ik", PyInit_ik);
        Py_Initialize();
        // "module 'sys' has no attribute 'argv'"
        PyRun_SimpleString("import sys\nsys.argv = ['./iktests']");
        // sys.exit() would cause the program to exit. Raise an exception instead so PyRun_SimpleString() returns non-zero if exit was called
        PyRun_SimpleString(
            "import sys\n"
            "def stub(x):\n"
            "    if x:\n"
            "        raise RuntimeError(\"sys.exit({})\".format(x))\n"
            "sys.exit = stub");
}

static void deinit_python()
{
    EXPECT_THAT(Py_FinalizeEx(), Eq(0));
}

class NAME : public Test
{
public:
    virtual void SetUp()
    {
        init_python();
    }

    virtual void TearDown()
    {
        deinit_python();
    }
};

TEST_F(NAME, module_import_many_times)
{
    for (int i = 0; i != 20; ++i)
    {
        PyRun_SimpleString("import ik\nimport unittest\n");
        deinit_python();
        init_python();
    }
}
